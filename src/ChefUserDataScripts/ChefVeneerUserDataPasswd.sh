"#!/bin/bash\n",
"export LOG_FILE=\"/tmp/cloud-init_log.txt\"\n",
"###\n",
"#\n",
"#  This script takes the necessary steps to enable a linux AMI (e.g. Ubuntu) for Chef to be installed later via Knife.  It has the following responsibilities:\n",
"#  1. general update of system\n",
"#  2. User 'opscode' creation\n",
"#  3. Enablement of SSH Password based Authentication (requires ssh service to be restarted).\n",
"#  4. Enable sudo privileges for 'opscode' user.\n",
"#\n",
"#  The general knife usage command associated with this configuration would be:\n",
"#      knife bootstrap $NODE_IP --sudo -x <ssh-user-id> -P <ssh-passcode-for-user> -N \"<your node name>\"\n",
"#      when prompted, enter sudo password for <ssh-user-id>\n",
"###\n",
"\n",
"###\n",
"# Log commands executed to /var/log/\n",
"set -x\n",
"###\n",
"\n",
"### \n",
"# Bring system up to date\n",
"apt-get -y update\n",
"# apt-get -y upgrade\n",
"echo [`date +%F`][`date +%T`] apt-get complete >>\"${LOG_FILE}\"\n",
"### \n",
"\n",
"###\n",
"# Create opscode user and set password\n",
"export TARGET_UID=\"opscode\"\n",
"useradd -m -s /bin/bash -p '$6$Ka3r1lxR$75GM7Cc2g86KafLQC3T4Tbb.YxAHXcgbpL9BDs.nETQSiabnrsGeKfk6DCuzQAGcm0YpTJkQs44moHJM..AqB/' \"${TARGET_UID}\"\n",
"###\n",
"\n",
"###\n",
"# Edit sshd_config to allow for password based authentication\n",
"# Backup the original file first\n",
"export SSH_HOME=\"/etc/ssh\"\n",
"export SSH_CONFIG_FILE=\"${SSH_HOME}/sshd_config\"\n",
"export SSH_TMP_FILE=\"/tmp/sshd_config\"\n",
"export SED=\"/bin/sed\"\n",
"cp \"${SSH_CONFIG_FILE}\" \"${SSH_CONFIG_FILE}.orig\"\n",
"# In /etc/ssh/sshd_config, change \"PasswordAuthentication no\" to yes, when it exists in column 1.\n",
"\"${SED}\" 's/^PasswordAuthentication no/PasswordAuthentication yes/g' \"${SSH_CONFIG_FILE}\" > \"${SSH_TMP_FILE}\"\n",
"# maintain file ownership and perms\n",
"cat \"${SSH_TMP_FILE}\" > \"${SSH_CONFIG_FILE}\" \n",
"rm -f \"${SSH_TMP_FILE}\"\n",
"echo [`date +%F`][`date +%T`] opscode password based authentication in place >>\"${LOG_FILE}\"\n",
"###\n",
"\n",
"###\n",
"# Edit /etc/sudoers.  Allow opscode to execute sudo based commands \n",
"# Backup the original file first\n",
"export SUDOERS_FILE=\"/etc/sudoers\"\n",
"cp \"${SUDOERS_FILE}\" \"${SUDOERS_FILE}.orig\"\n",
"#\n",
"(\n",
"cat <<EOF\n",
"\n",
"opscode ALL=(ALL:ALL) ALL\n",
"EOF\n",
") >> \"${SUDOERS_FILE}\"\n",
"echo [`date +%F`][`date +%T`] opscode authorized in sudoers file >>\"${LOG_FILE}\"\n",
"###\n",
"\n",
"###\n",
"# Restart ssh service to apply changes\n",
"# For some reason, service ssh restart is not effective.\n",
"service ssh stop\n",
"service ssh start\n",
"echo [`date +%F`][`date +%T`] Cloud-init script completed >>\"${LOG_FILE}\"\n",
"###\n"
