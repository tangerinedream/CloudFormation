{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "CloudFormation Template:  Scheduled Scaling Plan: Create a load balanced, Auto Scaled instance farm. The farm increases at the top of the hour and decreases at the bottom of the hour.  This example creates an Auto Scaling group behind a load balancer with a simple health check.",
  
  "Parameters" : {
    "InstanceType" : {
      "Description" : "Chef enabled EC2 instance",
      "Type" : "String",
      "Default" : "t1.micro",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String"
    },
    
    "EgressIPRange" : {
      "Description" : "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
   
    "WebServerPort" : {
 		"Description" : "TCP/IP port of the web server used for healthcheck calls",
 		"Type" : "String",
 		"Default" : "80"
    }
  },

  "Mappings" : {
    
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "64" },
      "m1.small"    : { "Arch" : "64" },
      "m1.medium"   : { "Arch" : "64" },
      "m1.large"    : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" },
      "m2.xlarge"   : { "Arch" : "64" },
      "m2.2xlarge"  : { "Arch" : "64" },
      "m2.4xlarge"  : { "Arch" : "64" },
      "m3.xlarge"   : { "Arch" : "64" },
      "m3.2xlarge"  : { "Arch" : "64" },
      "c1.medium"   : { "Arch" : "64" },
      "c1.xlarge"   : { "Arch" : "64" }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "32" : "ami-11edb078", "64" : "ami-12d6a87b" },
      "us-west-1"      : { "32" : "ami-1af6c75f", "64" : "ami-5c9bad19" },
      "us-west-2"      : { "32" : "ami-1221ab22", "64" : "ami-008b1c30" }
    }
  },

  "Resources" : {
    
    "LaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : 
        	[ 
        		"AWSRegionArch2AMI", 
        		{ "Ref" : "AWS::Region" },
        		{ "Fn::FindInMap" : 
        			[ 
        				"AWSInstanceType2Arch", 
        				{ "Ref" : "InstanceType" },
                        "Arch" 
                    ]
                } 
            ] 
        },
        "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
        "InstanceType" : { "Ref" : "InstanceType" },
        "EbsOptimized" : "false",
        "UserData" : ""
      }
    },
    
    "AutoScaleGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
        "MinSize" : "1",
        "MaxSize" : "1",
        "LoadBalancerNames" : [ { "Ref" : "ElasticLoadBalancer" } ]
      }
    },
    
    "ScheduledScaleOut": {
      "Type": "AWS::AutoScaling::ScheduledAction",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "AutoScaleGroup"
        },
        "MaxSize": "2",
        "MinSize": "1",
        "DesiredCapacity" : "2",
        "Recurrence": "10 * * * *"
      }
    },
    
    "ScheduledScaleIn": {
      "Type": "AWS::AutoScaling::ScheduledAction",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "AutoScaleGroup"
        },
        "MaxSize": "1",
        "MinSize": "1",
        "DesiredCapacity" : "1",
        "Recurrence": "50 * * * *"
      }
    },
    
    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "Listeners" :
        	[  
        		{
        			"LoadBalancerPort" : "80", 
        			"InstancePort" : { "Ref" : "WebServerPort" }, 
        			"Protocol" : "HTTP"
        		} 
        	],
        "HealthCheck" : {
          "Target" : { 
          		"Fn::Join" : [ "", ["HTTP:", { "Ref" : "WebServerPort" }, "/"] ]
          },
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "5",
          "Interval" : "60",
          "Timeout" : "10"
        }
       }
    },

    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access and HTTP access on the configured port",
        "SecurityGroupIngress" : 
          [ 
          	{ 
          		"IpProtocol" : "tcp", 
          		"FromPort" : "22", 
          		"ToPort" : "22", 
          		"CidrIp" : { "Ref" : "EgressIPRange"} 
          	},
            { 
            	"IpProtocol" : "tcp", 
            	"FromPort" : { "Ref" : "WebServerPort" }, 
            	"ToPort" : { "Ref" : "WebServerPort" }, 
            	"CidrIp" : "0.0.0.0/0"
            } 
         ]
      }
    }
  },
  
  "Outputs" : {
	"URL" : {
	  "Description" : "URL of the website",
	  "Value" :  { "Fn::Join" : 
	  					[ "", [ "http://", 	{ "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName" ] } 
		   					  ]
	  					]
	  			  }
    }
  }
}
